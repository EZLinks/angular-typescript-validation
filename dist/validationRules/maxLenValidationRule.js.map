{"version":3,"sources":["validationRules/maxLenValidationRule.ts"],"names":[],"mappings":";AAAA,2CAAoC;AAGpC;;GAEG;AACH;IAEI;;;;OAIG;IACH,8BAAmB,YAAoB,EAAU,IAAY,EAAS,OAAe;QAAlE,iBAAY,GAAZ,YAAY,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IACrF,CAAC;IAOD,sBAAW,2CAAS;QALpB;;;;WAIG;aACH;YACI,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;;;OAAA;IAED;;;OAGG;IACI,uCAAQ,GAAf,UAAgB,KAAU;QAA1B,iBAOC;QANG,IAAI,OAAO,GAAqB,IAAI,qBAAO,CAAC,UAAC,OAAO;YAEhD,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,2BAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,oDAAoB","file":"maxLenValidationRule.js","sourcesContent":["import {Promise} from 'es6-promise';\r\nimport { IValidationRule } from '../interfaces/validationRule';\r\n\r\n/**\r\n * validation rule for max length.\r\n */\r\nexport class MaxLenValidationRule implements IValidationRule {\r\n\r\n    /**\r\n     * inits rule\r\n     * @param data\r\n     * @param message\r\n     */\r\n    constructor(public propertyName: string, private data: number, public message: string) {\r\n    }\r\n\r\n    /**\r\n     * action key.\r\n     * \r\n     * @returns {string} \r\n     */\r\n    public get attribute(): string {\r\n        return 'maxlen';\r\n    }\r\n\r\n    /**\r\n     * validate action.\r\n     * @param value\r\n     */\r\n    public validate(value: any): Promise<boolean> {\r\n        let promise: Promise<boolean> = new Promise((resolve) => {\r\n\r\n            resolve(value.length <= this.data);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}"]}