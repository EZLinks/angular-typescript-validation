{"version":3,"sources":["validationRules/clientValidationRule.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH;IAEI;;;;;OAKG;IACH,8BAAmB,YAAoB,EAAU,cAAoD,EAAS,OAAe;QAA1G,iBAAY,GAAZ,YAAY,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAsC;QAAS,YAAO,GAAP,OAAO,CAAQ;IAC7H,CAAC;IAOD,sBAAW,2CAAS;QALpB;;;;WAIG;aACH;YACI,OAAO,cAAc,CAAC;QAC1B,CAAC;;;OAAA;IAED;;;OAGG;IACI,uCAAQ,GAAf,UAAgB,MAAW,EAAE,KAAU;QAAvC,iBASC;QAPG,IAAI,OAAO,GAAqB,IAAI,OAAO,CAAC,UAAC,OAAO;YAEhD,IAAI,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAChD,OAAO,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,2BAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,oDAAoB","file":"clientValidationRule.js","sourcesContent":["import { IValidationRule } from '../interfaces/validationRule';\r\n\r\n/**\r\n * rule for client custom validation.\r\n */\r\nexport class ClientValidationRule implements IValidationRule {\r\n\r\n    /**\r\n     * inits rule\r\n     *\r\n     * @param validationCall\r\n     * @param message\r\n     */\r\n    constructor(public propertyName: string, private validationCall: (entity: any, value: any) => boolean, public message: string) {\r\n    }\r\n\r\n    /**\r\n     * action key\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get attribute(): string {\r\n        return 'clientCustom';\r\n    }\r\n\r\n    /**\r\n     * validate action\r\n     * @param value\r\n     */\r\n    public validate(entity: any, value: any): Promise<boolean> {\r\n\r\n        let promise: Promise<boolean> = new Promise((resolve) => {\r\n\r\n            let result = this.validationCall(entity, value);\r\n            resolve(result);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}\r\n"]}