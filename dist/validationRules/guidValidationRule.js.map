{"version":3,"sources":["validationRules/guidValidationRule.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH;IACI;;;;OAIG;IACH,4BAAmB,YAAoB,EAAS,OAAe;QAA5C,iBAAY,GAAZ,YAAY,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAC/D,CAAC;IAOD,sBAAW,yCAAS;QALpB;;;;WAIG;aACH;YACI,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;;;OAAA;IAED;;;;OAIG;IACI,qCAAQ,GAAf,UAAgB,MAAW,EAAE,KAAU;QACnC,IAAI,OAAO,GAAqB,IAAI,OAAO,CAAC,UAAC,OAAO;YAEhD,IAAI,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC;YAC7B,IAAI,mBAAmB,GAAG,KAAK,KAAK,sCAAsC,CAAC;YAE3E,sCAAsC;YACtC,IAAI,KAAK,GAAG,qFAAqF,CAAC;YAElG,IAAI,WAAW,GAAG,cAAc,IAAI,mBAAmB,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC;YAEvF,OAAO,CAAC,WAAW,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,yBAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,gDAAkB","file":"guidValidationRule.js","sourcesContent":["import { IValidationRule } from '../interfaces/validationRule';\r\n\r\n/**\r\n * rule for required.\r\n */\r\nexport class GuidValidationRule implements IValidationRule {\r\n    /**\r\n     * init rule\r\n     *\r\n     * @param message\r\n     */\r\n    constructor(public propertyName: string, public message: string) {\r\n    }\r\n\r\n    /**\r\n     * action key.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get attribute(): string {\r\n        return 'guid';\r\n    }\r\n\r\n    /**\r\n     * validate action.\r\n     *\r\n     * @param value\r\n     */\r\n    public validate(entity: any, value: any): Promise<boolean> {\r\n        let promise: Promise<boolean> = new Promise((resolve) => {\r\n\r\n            let isValueDefined = !!value;\r\n            let isValueNotEmptyGuid = value !== '00000000-0000-0000-0000-000000000000';\r\n\r\n            // https://stackoverflow.com/a/7905992\r\n            let regex = /^\\{?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\}?$/;\r\n            \r\n            let isValidGuid = isValueDefined && isValueNotEmptyGuid && value.match(regex) !== null;\r\n\r\n            resolve(isValidGuid);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}\r\n"]}