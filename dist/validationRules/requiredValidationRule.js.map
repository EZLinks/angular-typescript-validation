{"version":3,"sources":["validationRules/requiredValidationRule.ts"],"names":[],"mappings":";AAAA,2CAAoC;AAGpC;;GAEG;AACH;IACI;;;;OAIG;IACH,gCAAmB,YAAoB,EAAS,OAAe;QAA5C,iBAAY,GAAZ,YAAY,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAC/D,CAAC;IAOD,sBAAW,6CAAS;QALpB;;;;WAIG;aACH;YACI,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC;;;OAAA;IAED;;;;OAIG;IACI,yCAAQ,GAAf,UAAgB,KAAU;QACtB,IAAI,OAAO,GAAqB,IAAI,qBAAO,CAAC,UAAC,OAAO;YAEhD,IAAI,UAAU,GAAY,KAAK,CAAC;YAChC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxD,UAAU,GAAG,IAAI,CAAC;YACtB,CAAC;YAED,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,6BAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,wDAAsB","file":"requiredValidationRule.js","sourcesContent":["import {Promise} from 'es6-promise';\nimport { IValidationRule } from '../interfaces/validationRule';\n\n/**\n * rule for required.\n */\nexport class RequiredValidationRule implements IValidationRule {\n    /**\n     * init rule\n     * \n     * @param message\n     */\n    constructor(public propertyName: string, public message: string) {\n    }\n\n    /**\n     * action key.\n     * \n     * @returns {string} \n     */\n    public get attribute(): string {\n        return 'required';\n    }\n\n    /**\n     * validate action.\n     * \n     * @param value\n     */\n    public validate(value: any): Promise<boolean> {\n        let promise: Promise<boolean> = new Promise((resolve) => {\n\n            let notDefined: boolean = false;\n            if (value === null || value === undefined || value === '') {\n                notDefined = true;\n            }\n\n            resolve(!notDefined);\n        });\n\n        return promise;\n    }\n}"]}