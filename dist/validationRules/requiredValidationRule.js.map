{"version":3,"sources":["validationRules/requiredValidationRule.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH;IACI;;;;OAIG;IACH,gCAAmB,YAAoB,EAAS,OAAe;QAA5C,iBAAY,GAAZ,YAAY,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAC/D,CAAC;IAOD,sBAAW,6CAAS;QALpB;;;;WAIG;aACH;YACI,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC;;;OAAA;IAED;;;;OAIG;IACI,yCAAQ,GAAf,UAAgB,MAAW,EAAE,KAAU;QACnC,IAAI,OAAO,GAAqB,IAAI,OAAO,CAAC,UAAC,OAAO;YAEhD,IAAI,UAAU,GAAY,KAAK,CAAC;YAChC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxD,UAAU,GAAG,IAAI,CAAC;YACtB,CAAC;YAED,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,6BAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,wDAAsB","file":"requiredValidationRule.js","sourcesContent":["import { IValidationRule } from '../interfaces/validationRule';\r\n\r\n/**\r\n * rule for required.\r\n */\r\nexport class RequiredValidationRule implements IValidationRule {\r\n    /**\r\n     * init rule\r\n     *\r\n     * @param message\r\n     */\r\n    constructor(public propertyName: string, public message: string) {\r\n    }\r\n\r\n    /**\r\n     * action key.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get attribute(): string {\r\n        return 'required';\r\n    }\r\n\r\n    /**\r\n     * validate action.\r\n     *\r\n     * @param value\r\n     */\r\n    public validate(entity: any, value: any): Promise<boolean> {\r\n        let promise: Promise<boolean> = new Promise((resolve) => {\r\n\r\n            let notDefined: boolean = false;\r\n            if (value === null || value === undefined || value === '') {\r\n                notDefined = true;\r\n            }\r\n\r\n            resolve(!notDefined);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}\r\n"]}